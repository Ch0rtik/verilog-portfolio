module b2ss(
	input [4:0] mo,
	output reg [6:0] ssi
);

	reg [6:0] seg_arr [31:0];
	
	initial begin
		seg_arr[0]  = 7'h3F;
		seg_arr[1]  = 7'h06;
		seg_arr[2]  = 7'h5B;
		seg_arr[3]  = 7'h4F;
		seg_arr[4]  = 7'h66;
		seg_arr[5]  = 7'h6D;
		seg_arr[6]  = 7'h7D;
		seg_arr[7]  = 7'h07;
		seg_arr[8]  = 7'h7F;
		seg_arr[9]  = 7'h6F;
		
		seg_arr[10] = 7'h77;
		seg_arr[11] = 7'h7C;
		seg_arr[12] = 7'h39;
		seg_arr[13] = 7'h5E;
		seg_arr[14] = 7'h79;
		seg_arr[15] = 7'h71;
		//H
		seg_arr[16] = 7'h76;
		//П
		seg_arr[17] = 7'h37;
		//space
		seg_arr[18] = 7'h00;
		//U
		seg_arr[19] = 7'h6E;
		//n
		seg_arr[20] = 7'h54;
		//Г
		seg_arr[21] = 7'h31;
		//Р
		seg_arr[22] = 7'b1110011;
		//Д first half
		seg_arr[23] = 7'b1010010;
		//Д second half
		seg_arr[24] = 7'b1100100;
		//W second half
		seg_arr[25] = 7'b1000111;
		//1000111
		//0110001
	end
	always @*
		ssi = seg_arr[mo];
endmodule